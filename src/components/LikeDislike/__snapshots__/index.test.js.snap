// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LikeDislike /> renders  <LikeDislike /> components 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Reaction
    count=""
    id=""
    onClick={[Function]}
    src="thumbsUp.svg"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span />,
        <a
          className=""
          href="#!"
          onClick={[Function]}
>
          <img
                    alt="Reaction"
                    className=""
                    id=""
                    src="thumbsUp.svg"
          />
</a>,
      ],
      "className": "reactions__icon p-b--20",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "",
        },
        "ref": null,
        "rendered": "",
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="Reaction"
            className=""
            id=""
            src="thumbsUp.svg"
/>,
          "className": "",
          "href": "#!",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Reaction",
            "className": "",
            "id": "",
            "src": "thumbsUp.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span />,
          <a
            className=""
            href="#!"
            onClick={[Function]}
>
            <img
                        alt="Reaction"
                        className=""
                        id=""
                        src="thumbsUp.svg"
            />
</a>,
        ],
        "className": "reactions__icon p-b--20",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "",
          },
          "ref": null,
          "rendered": "",
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="Reaction"
              className=""
              id=""
              src="thumbsUp.svg"
/>,
            "className": "",
            "href": "#!",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Reaction",
              "className": "",
              "id": "",
              "src": "thumbsUp.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
